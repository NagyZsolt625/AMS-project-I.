//*****************************************************************
// Delay for incrementing position
//
#tmr1(IN := #tmr_start,
      PT := #Tbase);

#tmr_start := NOT #tmr1.Q;


//*****************************************************************
// Increment position
//
IF #M_be AND #tmr1.Q AND #M_obj AND NOT #M_tilt AND #position < #PosEnd THEN

        #position := #position + 1;
        
END_IF;


//*****************************************************************
// Register object in the nullposition
//
IF #Obj_in AND NOT #obj_in_fp THEN
    #position := 0;
    #M_obj := 1;
END_IF;

#obj_in_fp := #Obj_in;


//*****************************************************************
// Object in the end position
//

#Obj_out := #position >= #PosEnd;

IF #position >= #PosEnd THEN
//    #Obj_out := 1;
    #M_obj := 0;
    #position := 0;
    
END_IF;


//*****************************************************************
// Display motor on
//
#M_on := #M_be;


//*****************************************************************
// Handle the end position
// 
//#Obj_out := #position >= #PosEnd;


//*****************************************************************
// Handle light error cases
// 
IF  #M_be AND NOT #M_req  THEN
    
    #err_lt := 1;
ELSE
    #err_lt := 0;
    
END_IF;


//*****************************************************************
// Handle fatal error cases
// 
IF #M_be AND #M_tilt OR
    NOT #M_be AND #M_req THEN
    
    #err_ft := 1;
ELSE
    #err_ft := 0;
END_IF;

IF #Error_fatal THEN
    #err_ft := 0;
END_IF;

IF #Error_lite THEN
    #err_lt := 0;
END_IF;

//*****************************************************************
// Delay for displaying error
//
#tmr2(IN := #err_ft,
      PT := #Err_delay,
      Q => #Error_fatal);

#tmr3(IN := #err_lt,
      PT := #Err_delay,
      Q => #Error_lite);
